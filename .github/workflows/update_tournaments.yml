name: Atualizar Torneios Diários

on:
  schedule:
     - cron: '0 12 * * *'  # novo: 09:00 Brasília
  workflow_dispatch: # Permite execução manual

permissions:
  contents: write # Permite que o workflow faça push no repositório

jobs:
  update-tournaments:
    runs-on: ubuntu-latest
    env:
      CACHE_BUSTER: ${{ github.run_id }}  # Identificador único por execução

    steps:
      - name: Checkout Repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Garantir que todo o histórico seja baixado

      - name: Limpar Ambiente
        run: |
          rm -rf *  # Remove todos os arquivos antes de checkout
          git reset --hard HEAD
          echo "Ambiente limpo às $(date -u)"

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Instalar Dependências
        run: |
          echo "Instalando dependências às $(date -u)"
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Executar Script Python
        id: run-python
        run: |
          echo "Iniciando execução do script Python às $(date -u)"
          python generate_tournaments.py 2>&1 | tee python_output.log
          echo "Script Python concluído. Verificando index.html..."
          ls -la
          if [ -f "index.html" ]; then
            cat index.html
          else
            echo "Arquivo index.html não encontrado"
          fi
          cat python_output.log
          git status
          git diff --staged || echo "Nenhuma alteração detectada"
          echo "Tempo de execução: $(( $(date +%s) - $(date +%s -r python_output.log) )) segundos"

      - name: Enviar Arquivo via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/baixarjogos/lidraughts/torneios/puxa-torneios-diariamente/
          local-dir: ./
          exclude: |
            **/*
            !index.html
          protocol: ftp
          timeout: 300000 # 300 segundos (5 minutos)
          log-level: verbose
          state-name: ""

      - name: Commit e Push Alterações
        run: |
          echo "Iniciando commit e push às $(date -u)..."
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add index.html
          git diff --staged || echo "Nenhuma alteração detectada"
          git commit -m "Atualizar index.html com novos torneios em $(date -u +%Y%m%d%H%M%S)" -m "Forçando commit para garantir atualização" || echo "Commit forçado falhou, mas prosseguindo"
          git push --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
